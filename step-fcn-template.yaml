AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Template

Parameters:
  DataBucketName:
    Type: String
    Default: imagine-canada-data # TODO: get rid of this later?
    Description: S3 bucket containing the data and files

Resources:
  # IAM role for state machine
  DataProcessingStateMachineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: states.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: DataProcessingStateMachineInvokeLambda
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource:
                  - Fn::Sub: arn:*:lambda:*:${AWS::AccountId}:function:*

  # IAM role for lambdas
  DataProcessingLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: DataProcessingAccessBucket
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                Resource:
                  - "arn:aws:s3:::${DataBucketName}/*"
              - Effect: Allow
                Action:
                  - dynamodb:*
                Resource:
                  - "arn:aws:dynamodb:*:*:table/*" # TODO: make this specific using param store

  # layer used by the data processing roles
  AWSDataWranglerLayer:
    Type: AWS::Lambda::LayerVersion
    Properties:
      Content: ./layers/
        # S3Bucket: "${DataBucketName}" # not workingggg
        # S3Key: lambda-layers/AWSDataWranglerLayer.zip # TODO: unless we create this, don't hard code!!!

  # lambdas used in data processing step function
  CleanAndCombineDonations:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambda_function.lambda_handler
      Runtime: python3.8
      CodeUri: ./functions/clean_and_combine_donations
      Description: ''
      MemorySize: 512
      Timeout: 5
      Role: !GetAtt DataProcessingLambdaRole.Arn
      Layers:
        - !Ref AWSDataWranglerLayer
  
  AddProvinceDonation:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambda_function.lambda_handler
      Runtime: python3.8
      CodeUri: ./functions/add_province_donation
      Description: ''
      MemorySize: 256
      Timeout: 5
      Role: !GetAtt DataProcessingLambdaRole.Arn
      Layers:
        - !Ref AWSDataWranglerLayer

  DonationsToDB:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambda_function.lambda_handler
      Runtime: python3.8
      CodeUri: ./functions/donations_to_DB
      Description: ''
      MemorySize: 256
      Timeout: 180
      Role: !GetAtt DataProcessingLambdaRole.Arn
      Layers:
        - !Ref AWSDataWranglerLayer

  CleanCensus:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambda_function.lambda_handler
      Runtime: python3.8
      CodeUri: ./functions/clean_census
      Description: ''
      MemorySize: 1024
      Timeout: 90
      Role: !GetAtt DataProcessingLambdaRole.Arn
      Layers:
        - !Ref AWSDataWranglerLayer

  MapHeadersAndPopulations:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambda_function.lambda_handler
      Runtime: python3.8
      CodeUri: ./functions/map_headers_and_populations
      Description: ''
      MemorySize: 512
      Timeout: 90
      Role: !GetAtt DataProcessingLambdaRole.Arn
      Layers:
        - !Ref AWSDataWranglerLayer

  AddProvinceCensus:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambda_function.lambda_handler
      Runtime: python3.8
      CodeUri: ./functions/add_province_census
      Description: ''
      MemorySize: 1024
      Timeout: 90
      Role: !GetAtt DataProcessingLambdaRole.Arn
      Layers:
        - !Ref AWSDataWranglerLayer

  JoinPopulationsAndCensus:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambda_function.lambda_handler
      Runtime: python3.8
      CodeUri: ./functions/join_populations_and_census
      Description: ''
      MemorySize: 1024
      Timeout: 600
      Role: !GetAtt DataProcessingLambdaRole.Arn
      Layers:
        - !Ref AWSDataWranglerLayer

  CalculatePercent:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambda_function.lambda_handler
      Runtime: python3.8
      CodeUri: ./functions/calculate_percent
      Description: ''
      MemorySize: 512
      Timeout: 300
      Role: !GetAtt DataProcessingLambdaRole.Arn
      Layers:
        - !Ref AWSDataWranglerLayer

  CensusToDB:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambda_function.lambda_handler
      Runtime: python3.8
      CodeUri: ./functions/census_to_DB
      Description: ''
      MemorySize: 1024
      Timeout: 900
      Role: !GetAtt DataProcessingLambdaRole.Arn
      Layers:
        - !Ref AWSDataWranglerLayer

  CleanUpS3:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambda_function.lambda_handler
      Runtime: python3.8
      CodeUri: ./functions/clean_up_s3
      Description: ''
      MemorySize: 128
      Timeout: 10
      Role: !GetAtt DataProcessingLambdaRole.Arn

  # data processing step fcn
  DataProcessingStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: ./state-machine.asl.json
      DefinitionSubstitutions: 
        CleanAndCombineDonationsArn: !GetAtt CleanAndCombineDonations.Arn
        AddProvinceDonationArn: !GetAtt AddProvinceDonation.Arn
        DonationsToDBArn: !GetAtt DonationsToDB.Arn
        CleanCensusArn: !GetAtt CleanCensus.Arn
        MapHeadersPopulationsArn: !GetAtt MapHeadersAndPopulations.Arn
        AddProvinceCensusArn: !GetAtt AddProvinceCensus.Arn
        JoinPopulationsCensusArn: !GetAtt JoinPopulationsAndCensus.Arn
        CalculatePercentArn: !GetAtt CalculatePercent.Arn
        CensusToDBArn: !GetAtt CensusToDB.Arn
        CleanUpS3Arn: !GetAtt CleanUpS3.Arn
      Role: !GetAtt DataProcessingStateMachineRole.Arn
