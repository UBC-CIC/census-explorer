{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "CloudFormation Stack for TopoJSON files and CloudFront",
  "Metadata": {},
  "Parameters": {
    "env": {
      "Type": "String",
      "Description": "The environment name. e.g. Dev, Test, or Production",
      "Default": "NONE"
    }
  },
  "Resources": {
    "S3Bucket": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "Comment": "Bucket for storing the TopoJSON files"
      },
      "Properties": {
        "AccessControl": "Private"
      },
      "Type": "AWS::S3::Bucket"
    },
    "S3BucketPolicy": {
      "Metadata": {
        "Comment": "Bucket policy to allow cloudfront to access the data"
      },
      "Properties": {
        "Bucket": {
          "Ref": "S3Bucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject"
              ],
              "Effect": "Allow",
              "Principal": {
                "CanonicalUser": {
                  "Fn::GetAtt": [
                    "CfOriginAccessIdentity",
                    "S3CanonicalUserId"
                  ]
                }
              },
              "Resource": [
                {
                  "Fn::Sub": "arn:aws:s3:::${S3Bucket}/*"
                }
              ]
            }
          ]
        }
      },
      "Type": "AWS::S3::BucketPolicy"
    },
    "CfDistribution": {
      "Metadata": {
        "Comment": "CloudFront Distribution for serving the TopoJSON files"
      },
      "Properties": {
        "DistributionConfig": {
          "Comment": "A simple distribution with an S3 origin",
          "DefaultCacheBehavior": {
            "AllowedMethods": [
              "HEAD",
              "GET",
              "OPTIONS"
            ],
            "CachedMethods": [
              "HEAD",
              "GET",
              "OPTIONS"
            ],
            "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
            "OriginRequestPolicyId": "88a5eaf4-2fd4-4709-b370-b4c650ea3fcf",
            "Compress": false,
            "DefaultTTL": 86400,
            "ForwardedValues": {
              "Cookies": {
                "Forward": "none"
              },
              "Headers": [
                "Origin"
              ],
              "QueryString": false
            },
            "MaxTTL": 31536000,
            "MinTTL": 86400,
            "TargetOriginId": {
              "Fn::GetAtt": [
                "S3Bucket",
                "RegionalDomainName"
              ]
            },
            "ViewerProtocolPolicy": "redirect-to-https"
          },
          "DefaultRootObject": "",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": [
            {
              "DomainName": {
                "Fn::GetAtt": [
                  "S3Bucket",
                  "RegionalDomainName"
                ]
              },
              "Id": {
                "Fn::GetAtt": [
                  "S3Bucket",
                  "RegionalDomainName"
                ]
              },
              "OriginPath": "",
              "S3OriginConfig": {
                "OriginAccessIdentity": {
                  "Fn::Sub": "origin-access-identity/cloudfront/${CfOriginAccessIdentity}"
                }
              }
            }
          ],
          "PriceClass": "PriceClass_100"
        }
      },
      "Type": "AWS::CloudFront::Distribution"
    },
    "CfOriginAccessIdentity": {
      "Metadata": {
        "Comment": "Access S3 bucket content only through CloudFront"
      },
      "Properties": {
        "CloudFrontOriginAccessIdentityConfig": {
          "Comment": "Access S3 bucket content only through CloudFront"
        }
      },
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity"
    }
  },
  "Outputs": {
    "S3BucketName": {
      "Description": "Bucket name",
      "Value": {
        "Ref": "S3Bucket"
      }
    },
    "CfDistributionId": {
      "Description": "Id for our cloudfront distribution",
      "Value": {
        "Ref": "CfDistribution"
      }
    },
    "CfDistributionDomainName": {
      "Description": "Domain name for our cloudfront distribution",
      "Value": {
        "Fn::GetAtt": [
          "CfDistribution",
          "DomainName"
        ]
      }
    }
  }
}