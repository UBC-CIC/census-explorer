enum DonationTypeOption {
  COUPLE_WITH_CHILDREN
  LONE_PARENT_FAMILIES
  COUPLE_WITHOUT_CHILDREN
  PERSONS_NOT_IN_CENSUS_FAMILIES
  l20K
  l40K
  l60K
  l80K
  l100K
  l150K
  l200K
  l250K
  ge250K
}

enum ProvinceOption {
  AB
  BC
  MB
  NB
  NL
  NS
  NT
  NU
  ON
  PE
  QC
  SK
  YT
}

enum CensusProvinceOption {
  CAN
  AB
  BC
  MB
  NB
  NL
  NS
  NT
  NU
  ON
  PE
  QC
  SK
  YT
}

type DonationDataEntry
  @model
  @key(
    name: "donationDataByTypeFSA"
    fields: ["TYPE", "FSA"]
    queryField: "donationDataByTypeFSA"
  )
  @key(
    name: "donationDataByTypeProvince"
    fields: ["PROVINCE", "TYPE"]
    queryField: "donationDataByTypeProvince"
  ) {
  FSA: String!
  TYPE: DonationTypeOption!
  YEAR: Float
  INCOME_GROUP: String
  NUM_FAM: Float
  TOT_DONS: Float
  NUM_DONS: Float
  MEDIAN_DON: Float
  DON_RATE: Float
  PROVINCE: ProvinceOption
}

#  Make a CensusData model with this shape
# {"FSA":"Canada","GNR":4.0,"GNR_LF":5.1,"DATA_QUALITY_FLAG":20000,"CID":1,"TOTAL_COUNT":35151728.0,"MALE_COUNT":null,"FEMALE_COUNT":null,"PROVINCE":"CAN","CATEGORY":"Population, 2016","HEADER":"Population and dwellings","TOTAL_PERCENT":100.0}

type CensusDataEntry
  @model
  @key(
    name: "censusDataByCategoryFSA"
    fields: ["CATEGORY", "FSA"]
    queryField: "censusDataByCategoryFSA"
  )
  @key(
    name: "censusDataByProvinceCategoryHeader"
    fields: ["PROVINCE", "CATEGORY", "HEADER"]
    queryField: "censusDataByProvinceCategoryHeader"
  ) {
  FSA: String!
  CID: Float
  TOTAL_COUNT: Float
  MALE_COUNT: Float
  FEMALE_COUNT: Float
  PROVINCE: CensusProvinceOption!
  CATEGORY: String!
  HEADER: String!
  TOTAL_PERCENT: Float
}

type Query {
  similarSearch(user: similarSearchInput): similarSearchOutput
    @function(name: "similarSearch-${env}")
}

# Requires at least 1 of CID or TYPE. If both are provided, performs a search using both.
input similarSearchInput {
  FSAs: [String!]!
  CID: Int
  TYPE: DonationTypeOption
}

type similarSearchOutput {
  FSAs: [String!]!
}
